{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\feli_\\\\Documents\\\\Fall2022\\\\CHAT-APP\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { socket } from '../helpers/socket';\nimport io from 'socket.io-client';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:5000';\n\nconst Chat = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const location = useLocation(); // const [search, setSearch] = useSearchParams();\n\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); //  socket = io(ENDPOINT, { transports : ['websocket'] });\n    // const name = search.get(\"name\");\n    // const room = search.get(\"room\");\n\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    return () => {\n      socket.off();\n    };\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"uPBxYdGRPfM6fTH33XzDx7Q7bMA=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSearchParams","useLocation","queryString","socket","io","InfoBar","Input","Messages","ENDPOINT","Chat","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","location","parse","search","emit","error","alert","off","on","sendMessage","event","preventDefault","console","log"],"sources":["C:/Users/feli_/Documents/Fall2022/CHAT-APP/client/src/components/Chat/Chat.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport {useSearchParams, useLocation} from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { socket } from '../helpers/socket';\r\nimport io from 'socket.io-client';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\nimport \"./Chat.css\";\r\n\r\nconst ENDPOINT = 'http://localhost:5000';\r\n\r\n\r\n\r\nconst Chat = () => {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const location = useLocation()\r\n    // const [search, setSearch] = useSearchParams();\r\n     \r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search);\r\n      //  socket = io(ENDPOINT, { transports : ['websocket'] });\r\n        // const name = search.get(\"name\");\r\n        // const room = search.get(\"room\");\r\n        setName(name);\r\n        setRoom(room);\r\n        socket.emit('join', {name, room}, (error) => {\r\n           if (error) {\r\n            alert(error)\r\n           }\r\n        });\r\n        return () => {\r\n            socket.off();\r\n        };\r\n\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setMessages(messages => [...messages, message]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off();\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (message) {\r\n            socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    }\r\n\r\n    console.log(message, messages);\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room}/>\r\n                <Messages messages={messages} />\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n            </div>\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module"}